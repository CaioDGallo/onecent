services:
  app1: &app
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rust-app-1
    restart: unless-stopped
    networks:
      - backend
      - payment-processor
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 40M
        reservations:
          cpus: "0.4"
          memory: 30M
    environment:
      - APP_ENV=production
      - PORT=8080
      - INSTANCE_ID=1
      - DEFAULT_PROCESSOR_ENDPOINT=http://payment-processor-default:8080
      - FALLBACK_PROCESSOR_ENDPOINT=http://payment-processor-fallback:8080
      - REDIS_URL=redis://redis:6379

  app2:
    <<: *app
    container_name: rust-app-2
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - APP_ENV=production
      - PORT=8080
      - INSTANCE_ID=2
      - DEFAULT_PROCESSOR_ENDPOINT=http://payment-processor-default:8080
      - FALLBACK_PROCESSOR_ENDPOINT=http://payment-processor-fallback:8080
      - REDIS_URL=redis://redis:6379

  haproxy:
    image: haproxy:3.2-alpine
    container_name: haproxy-lb
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: 40M
        reservations:
          cpus: "0.15"
          memory: 25M
    sysctls:
      - net.core.somaxconn=4096
      - net.ipv4.tcp_tw_reuse=1
    ports:
      - "9999:80"
    networks:
      - backend
      - payment-processor
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - app1
      - app2

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.40"
          memory: 230M
        reservations:
          cpus: "0.35"
          memory: 200M

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
